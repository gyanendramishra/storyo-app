# This is a basic workflow that is manually triggered

name: Web Build

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  # Trigger the worflow on push request event for master and develop branch
  push:
    branches:
      - master
      - develop
    tags:
      - "v*"

  # Trigger the worflow on manual dispatch
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  install:
    runs-on: ubuntu-latest
    container:
      image: cypress/browsers:node16.13.0-chrome95-ff94
      options: --user 1001
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Cypress install
        uses: cypress-io/github-action@v4
        with:
          runTests: false
      # report machine parameters
      - run: yarn cypress info
      - run: node --version
      - run: node -p 'os.cpus()'
      - run: yarn types
      # - run: yarn lint
      # - run: yarn test
      - run: yarn build

      - name: Save build
        uses: actions/upload-artifact@v3
        with:
          name: build
          if-no-files-found: error
          path: build

  install-windows:
    runs-on: windows-2019
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Cypress install
        uses: cypress-io/github-action@v4
        with:
          runTests: false
      # report machine parameters
      - run: yarn cypress info
      - run: node -p 'os.cpus()'
      - run: yarn types
      # - run: yarn lint
      # - run: yarn test
      - run: yarn build

      - name: Save build
        uses: actions/upload-artifact@v3
        with:
          name: build
          if-no-files-found: error
          path: build

  ui-chrome-tests:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    container:
      image: cypress/browsers:node16.13.0-chrome95-ff94
      options: --user 1001
    needs: install
    strategy:
      # when one test fails, DO NOT cancel the other
      # containers, because this will kill Cypress processes
      # leaving Cypress Cloud hanging ...
      # https://github.com/cypress-io/github-action/issues/48
      fail-fast: false
      matrix:
        # run copies of the current job in parallel
        containers: [1, 2, 3, 4, 5]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download the build
        uses: actions/download-artifact@v3
        with:
          name: build
          path: build

      - name: Cypress info
        run: npx cypress info

      - name: Node info
        run: node -v

      - name: __e Dir
        run: ls /__e

      - name: "UI Tests - Chrome"
        uses: cypress-io/github-action@v4
        with:
          start: yarn start
          wait-on: "http://localhost:3000"
          wait-on-timeout: 120
          browser: chrome
          record: true
          parallel: true
          group: "UI - Chrome"
          # spec: cypress/tests/ui/*
          config-file: cypress.config.ts
        env:
          CYPRESS_PROJECT_ID: ${{ secrets.CYPRESS_PROJECT_ID }}
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          # Recommended: pass the GitHub token lets this action correctly
          # determine the unique run id necessary to re-run the checks
          GITHUB_TOKEN: ${{ secrets.AUTH_GITHUB_TOKEN }}
          DEBUG: "cypress:server:args"

  ui-chrome-mobile-tests:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    container:
      image: cypress/browsers:node16.13.0-chrome95-ff94
      options: --user 1001
    needs: install
    strategy:
      # when one test fails, DO NOT cancel the other
      # containers, because this will kill Cypress processes
      # leaving Cypress Cloud hanging ...
      # https://github.com/cypress-io/github-action/issues/48
      fail-fast: false
      matrix:
        # run copies of the current job in parallel
        containers: [1, 2, 3, 4, 5]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download the build folders
        uses: actions/download-artifact@v3
        with:
          name: build
          path: build

      - name: "UI Tests - Chrome - Mobile"
        uses: cypress-io/github-action@v4
        with:
          config: "viewportWidth=375,viewportHeight=667"
          start: yarn start
          wait-on: "http://localhost:3000"
          wait-on-timeout: 120
          browser: chrome
          record: true
          parallel: true
          group: "UI - Chrome - Mobile"
          # spec: cypress/tests/ui/*
          config-file: cypress.config.ts
        env:
          CYPRESS_PROJECT_ID: ${{ secrets.CYPRESS_PROJECT_ID }}
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          # Recommended: pass the GitHub token lets this action correctly
          # determine the unique run id necessary to re-run the checks
          GITHUB_TOKEN: ${{ secrets.AUTH_GITHUB_TOKEN }}

  ui-firefox-tests:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    container:
      image: cypress/browsers:node16.13.0-chrome95-ff94
      options: --user 1001
    needs: install
    strategy:
      # when one test fails, DO NOT cancel the other
      # containers, because this will kill Cypress processes
      # leaving Cypress Cloud hanging ...
      # https://github.com/cypress-io/github-action/issues/48
      fail-fast: false
      matrix:
        # run copies of the current job in parallel
        containers: [1, 2, 3, 4, 5]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download the build folders
        uses: actions/download-artifact@v3
        with:
          name: build
          path: build

      - name: "UI Tests - Firefox"
        uses: cypress-io/github-action@v4
        with:
          start: yarn start
          wait-on: "http://localhost:3000"
          wait-on-timeout: 120
          browser: firefox
          record: true
          parallel: true
          group: "UI - Firefox"
          # spec: cypress/tests/ui/*
          config-file: cypress.config.ts
        env:
          CYPRESS_PROJECT_ID: ${{ secrets.CYPRESS_PROJECT_ID }}
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          # Recommended: pass the GitHub token lets this action correctly
          # determine the unique run id necessary to re-run the checks
          GITHUB_TOKEN: ${{ secrets.AUTH_GITHUB_TOKEN }}

  ui-firefox-mobile-tests:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    container:
      image: cypress/browsers:node16.13.0-chrome95-ff94
      options: --user 1001
    needs: install
    strategy:
      # when one test fails, DO NOT cancel the other
      # containers, because this will kill Cypress processes
      # leaving Cypress Cloud hanging ...
      # https://github.com/cypress-io/github-action/issues/48
      fail-fast: false
      matrix:
        # run copies of the current job in parallel
        containers: [1, 2, 3, 4, 5]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download the build folders
        uses: actions/download-artifact@v3
        with:
          name: build
          path: build

      - name: "UI Tests - Firefox - Mobile"
        uses: cypress-io/github-action@v4
        with:
          config: "viewportWidth=375,viewportHeight=667"
          start: yarn start
          wait-on: "http://localhost:3000"
          wait-on-timeout: 120
          browser: firefox
          record: true
          parallel: true
          group: "UI - Firefox - Mobile"
          # spec: cypress/tests/ui/*
          config-file: cypress.config.ts
        env:
          CYPRESS_PROJECT_ID: ${{ secrets.CYPRESS_PROJECT_ID }}
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          # Recommended: pass the GitHub token lets this action correctly
          # determine the unique run id necessary to re-run the checks
          GITHUB_TOKEN: ${{ secrets.AUTH_GITHUB_TOKEN }}

  ui-windows-tests:
    timeout-minutes: 40
    runs-on: windows-2019
    needs: install-windows
    strategy:
      # when one test fails, DO NOT cancel the other
      # containers, because this will kill Cypress processes
      # leaving Cypress Cloud hanging ...
      # https://github.com/cypress-io/github-action/issues/48
      fail-fast: false
      matrix:
        # run copies of the current job in parallel
        containers: [1, 2, 3, 4, 5]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download the build
        uses: actions/download-artifact@v3
        with:
          name: build
          path: build

      - name: "UI Tests - Electron - Windows"
        uses: cypress-io/github-action@v4
        with:
          start: yarn start
          wait-on: "http://localhost:3000"
          wait-on-timeout: 120
          record: true
          parallel: true
          group: "UI - Electron - Windows"
          # spec: cypress/tests/ui/*
          config-file: cypress.config.ts
        env:
          CYPRESS_PROJECT_ID: ${{ secrets.CYPRESS_PROJECT_ID }}
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          # Recommended: pass the GitHub token lets this action correctly
          # determine the unique run id necessary to re-run the checks
          GITHUB_TOKEN: ${{ secrets.AUTH_GITHUB_TOKEN }}
  # build:
  #   name: Web Build
  #   # The type of runner that the job will run on
  #   runs-on: ubuntu-latest

  #   # Version strategy matrix
  #   strategy:
  #     matrix:
  #       node-version: [16.16.0]
  #   # Steps represent a sequence of tasks that will be executed as part of the job
  #   steps:
  #     # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
  #     - name: Checkout repository
  #       uses: actions/checkout@v3

  #     # Cache dependencies
  #     - name: Cache dependencies
  #       uses: actions/cache@v2
  #       with:
  #         path: |
  #           **/node_modules
  #         key: ${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}

  #     # Migrate/Setup node version
  #     - name: Use Node.js ${{ matrix.node-version }}
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: ${{ matrix.node-version }}

  #     # Install dependencies
  #     - name: Install dependencies
  #       run: npm install

  #     # Run tests
  #     # - name: Run the tests
  #     #   run: npm test

  #     # Build app
  #     - name: Build app
  #       run: CI=false npm run build

  #     # Upload artifacts
  #     - uses: actions/upload-artifact@v2
  #       with:
  #         name: app-build
  #         path: build
  #         retention-days: 30
  deploy:
    needs:
      [
        ui-chrome-tests,
        ui-chrome-mobile-tests,
        ui-firefox-tests,
        ui-firefox-mobile-tests,
        ui-windows-tests,
      ]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      # Download artifacts
      - name: Download build
        uses: actions/download-artifact@v3
        with:
          name: build

      # Deploy build path would be ${{ github.workspace }}/build
      - name: Deploy build
        run: |
          tag=$(echo "${{ github.ref }}" | sed 's/refs\/tags\///')
          version=$(node -pe "require('./package.json').version")
          if [ "$tag" == "v$version" ]; then
            git config --global user.name $user_name
            git config --global user.email $user_email
            git remote set-url origin https://${github_token}@github.com/${repository}
            npm run deploy
          else
            echo "Error: Tag $tag does not match package version $version"
            exit 1
          fi
        env:
          user_name: "github-actions[bot]"
          user_email: "github-actions[bot]@users.noreply.github.com"
          github_token: ${{ secrets.ACTIONS_DEPLOY_ACCESS_TOKEN }}
          repository: ${{ github.repository }}

  notify:
    name: Notify on Slack
    runs-on: ubuntu-latest
    # Only run this workflow when "build" workflow succeeds
    needs:
      [
        install,
        install-windows,
        ui-chrome-tests,
        ui-chrome-mobile-tests,
        ui-firefox-tests,
        ui-firefox-mobile-tests,
        ui-windows-tests,
        deploy,
      ]
    if: always()
    steps:
      - name: Notify on build success
        uses: abinoda/slack-action@master
        with:
          args: '{\"channel\":\"${{ secrets.SLACK_CHANNEL_ID }}\",\"blocks\":[{\"type\":\"section\",\"text\":{\"type\":\"mrkdwn\",\"text\":\"New build Request:\n*<https://github.com/${{ github.repository }}|Build repository>*\"}},{\"type\":\"section\",\"fields\":[{\"type\":\"mrkdwn\",\"text\":\"*Type:*\n${{ github.ref }} build\"},{\"type\":\"mrkdwn\",\"text\":\"*Author:*\n${{ github.event.head_commit.author.name }}\"},{\"type\":\"mrkdwn\",\"text\":\"*Commit:*\n<https://github.com/${{ github.repository }}/commit/${{ github.sha }}|${{ github.sha }}>\"},{\"type\":\"mrkdwn\",\"text\":\"*Email:*\n${{ github.event.head_commit.author.email }}\"},{\"type\":\"mrkdwn\",\"text\":\"*Message:*\n${{ github.event.head_commit.message }}\"}]},{\"type\":\"actions\",\"elements\":[{\"type\":\"button\",\"text\":{\"type\":\"plain_text\",\"emoji\":true,\"text\":\"Build ${{ needs.install.result }}\"},\"style\":\"primary\",\"value\":\"click_me_123\"},{\"type\":\"button\",\"text\":{\"type\":\"plain_text\",\"emoji\":true,\"text\":\"Deployment ${{ needs.deploy.result }}\"},\"style\":\"danger\",\"value\":\"click_me_123\"}]}]}'
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
